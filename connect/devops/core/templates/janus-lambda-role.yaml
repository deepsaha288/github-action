# Import 
# ---None
#
# Export 
#   Role_JanusPassthroughLambdaRole
#   Role_JanusSensorHistoryTrailLambdaRole


AWSTemplateFormatVersion: '2010-09-09'
Description: Cum Roles and policies for Lambda access.
Parameters:
  VpcId:
    Type: String
  AWSRegion:
    Type: String
  PrivateDnsEnabled:
    Type: String
  SubnetIds:
    Type: String

Resources:
 # Janus V2 - Janus Synergy 
 #  JanusPassthroughLambdaRole:
 #    Type: "AWS::IAM::Role"
 #    Properties: 
 #      ManagedPolicyArns:
 #        - !Sub 'arn:aws:iam::aws:policy/AWSXrayFullAccess'
 #        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomEC2ENIPolicy'
 #        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomAPIGWInvokeAccess'
 #        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomCloudWatchAccess'
 #        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomKMSDecryptOnly'
 #        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomKMSEncryptOnly'

 #      AssumeRolePolicyDocument: 
 #        Version: '2012-10-17'
 #        Statement:
 #        - Effect: Allow
 #          Principal:
 #            Service:
 #            - lambda.amazonaws.com
 #          Action: sts:AssumeRole
 #      Path: "/"
 #      RoleName: JanusPassthroughLambdaRole

  JanusSensorHistoryTrailLambdaRole:
    Type: "AWS::IAM::Role"
    Properties: 
      ManagedPolicyArns:
        - !Sub 'arn:aws:iam::aws:policy/AWSXrayFullAccess'
        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomEC2ENIPolicy'
        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomAPIGWInvokeAccess'
        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomCloudWatchAccess'
        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomDDBReadOnly'
        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomDDBWriteOnly'
        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomKMSEncryptOnly'
        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomKMSDecryptOnly'

      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
      RoleName: JanusSensorHistoryTrailLambdaRole  

  # PeriodicSnapshotCdxHandoverRole:
  #   Type: "AWS::IAM::Role"
  #   Properties: 
  #     ManagedPolicyArns:
  #       - !Sub 'arn:aws:iam::aws:policy/AWSXrayFullAccess'
  #       - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomEC2ENIPolicy'
  #       - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomAPIGWInvokeAccess'
  #       - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomCloudWatchAccess'
  #       - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomMSKReadOnly'
  #       - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomMSKWriteOnly'
  #       - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomKMSEncryptOnly'
  #       - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomKMSDecryptOnly'
  #       - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomRedisReadOnly'
  #       - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomRedisWriteOnly'
  #       - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CustomSQSAccessPolicy'

  #     AssumeRolePolicyDocument: 
  #       Version: '2012-10-17'
  #       Statement:
  #       - Effect: Allow
  #         Principal:
  #           Service:
  #           - lambda.amazonaws.com
  #         Action: sts:AssumeRole
  #     Path: "/"
  #     RoleName: PeriodicSnapshotCdxHandoverRole  


Outputs:
  # JanusPassthroughLambdaRole:
  #   Description: The ARN of Cumulus Role for Lambda Executor
  #   Value: !GetAtt [JanusPassthroughLambdaRole,Arn]
  #   Export:
  #     Name: !Sub "Role-JanusPassthroughLambdaRole"

  JanusSensorHistoryTrailLambdaRole:
    Description: The ARN of Cumulus Role for Lambda Executor
    Value: !GetAtt [JanusSensorHistoryTrailLambdaRole,Arn]
    Export:
      Name: !Sub "Role-JanusSensorHistoryTrailLambdaRole"

  # PeriodicSnapshotCdxHandoverRole:
  #   Description: The ARN of Cumulus Role for Lambda Executor
  #   Value: !GetAtt [PeriodicSnapshotCdxHandoverRole,Arn]
  #   Export:
  #     Name: !Sub "Role-PeriodicSnapshotCdxHandoverRole"
